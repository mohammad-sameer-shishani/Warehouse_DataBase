--------------------------------------------------------
--  File created - Wednesday-October-09-2024   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ITEMS
--------------------------------------------------------

  CREATE TABLE "ITEMS" 
   (	"ITEMID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"WAREHOUSEID" NUMBER, 
	"ITEMNAME" VARCHAR2(255), 
	"ITEMDESCRIPTION" CLOB, 
	"QUANTITY" NUMBER
   ) ;
--------------------------------------------------------
--  DDL for Table SUPPLYDOCUMENTS
--------------------------------------------------------

  CREATE TABLE "SUPPLYDOCUMENTS" 
   (	"DOCUMENTID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"DOCUMENTNAME" VARCHAR2(255), 
	"DOCUMENTSUBJECT" CLOB, 
	"WAREHOUSEID" NUMBER, 
	"ITEMID" NUMBER, 
	"CREATEDBY" NUMBER, 
	"CREATEDDATE" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"STATUS" VARCHAR2(20) DEFAULT 'Pending'
   ) ;
--------------------------------------------------------
--  DDL for Table USERS
--------------------------------------------------------

  CREATE TABLE "USERS" 
   (	"USERID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"FULLNAME" VARCHAR2(255), 
	"USERNAME" VARCHAR2(255), 
	"PASSWORDHASHED" VARCHAR2(255), 
	"USERTYPE" VARCHAR2(50), 
	"CREATEDDATE" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP
   ) ;
--------------------------------------------------------
--  DDL for Table WAREHOUSES
--------------------------------------------------------

  CREATE TABLE "WAREHOUSES" 
   (	"WAREHOUSEID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"WAREHOUSENAME" VARCHAR2(255), 
	"WAREHOUSEDESCRIPTION" CLOB, 
	"CREATEDBY" NUMBER, 
	"CREATEDDATE" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP
   ) ;
REM INSERTING into ITEMS
SET DEFINE OFF;
Insert into ITEMS (ITEMID,WAREHOUSEID,ITEMNAME,QUANTITY) values (1,1,'Laptop',20);
REM INSERTING into SUPPLYDOCUMENTS
SET DEFINE OFF;
Insert into SUPPLYDOCUMENTS (DOCUMENTID,DOCUMENTNAME,WAREHOUSEID,ITEMID,CREATEDBY,CREATEDDATE,STATUS) values (1,'Laptop Request',1,1,2,to_timestamp('03-OCT-24 05.07.16.146000000 PM','DD-MON-RR HH.MI.SSXFF AM'),'Pending');
REM INSERTING into USERS
SET DEFINE OFF;
Insert into USERS (USERID,FULLNAME,USERNAME,PASSWORDHASHED,USERTYPE,CREATEDDATE) values (1,'John Doe','john_manager','hashedpassword1','Manager',to_timestamp('03-OCT-24 05.06.44.215000000 PM','DD-MON-RR HH.MI.SSXFF AM'));
Insert into USERS (USERID,FULLNAME,USERNAME,PASSWORDHASHED,USERTYPE,CREATEDDATE) values (2,'Jane Smith','jane_employee','hashedpassword2','Employee',to_timestamp('03-OCT-24 05.06.44.219000000 PM','DD-MON-RR HH.MI.SSXFF AM'));
REM INSERTING into WAREHOUSES
SET DEFINE OFF;
Insert into WAREHOUSES (WAREHOUSEID,WAREHOUSENAME,CREATEDBY,CREATEDDATE) values (1,'Main Warehouse',1,to_timestamp('03-OCT-24 05.07.01.007000000 PM','DD-MON-RR HH.MI.SSXFF AM'));
--------------------------------------------------------
--  DDL for Index WAREHOUSES_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "WAREHOUSES_UK1" ON "WAREHOUSES" ("WAREHOUSENAME") 
  ;
--------------------------------------------------------
--  DDL for Package LOGIN_PACKAGE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "LOGIN_PACKAGE" 
as 
procedure Login(user_name in varchar2, Pass in varchar2);
end Login_Package;

/
--------------------------------------------------------
--  DDL for Package SUPPLYDOCUMENTS_PACKAGE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "SUPPLYDOCUMENTS_PACKAGE" IS
  PROCEDURE create_SupplyDocuments(
    c_DocumentName IN SupplyDocuments.DocumentName%TYPE,
    c_DocumentSubject IN SupplyDocuments.DocumentSubject%TYPE,
    c_WarehouseID IN SupplyDocuments.WarehouseID%TYPE,
    c_ItemID IN SupplyDocuments.ItemID%TYPE,
    c_CreatedBy IN SupplyDocuments.CreatedBy%TYPE,
    c_CreatedDate IN SupplyDocuments.CreatedDate%TYPE,
    c_Status IN SupplyDocuments.Status%TYPE
  );

  PROCEDURE update_SupplyDocuments(
    u_DocumentID IN SupplyDocuments.DocumentID%TYPE,
    u_DocumentName IN SupplyDocuments.DocumentName%TYPE,
    u_DocumentSubject IN SupplyDocuments.DocumentSubject%TYPE,
    u_WarehouseID IN SupplyDocuments.WarehouseID%TYPE,
    u_ItemID IN SupplyDocuments.ItemID%TYPE,
    u_CreatedBy IN SupplyDocuments.CreatedBy%TYPE,
    u_CreatedDate IN SupplyDocuments.CreatedDate%TYPE,
    u_Status IN SupplyDocuments.Status%TYPE
  );

  PROCEDURE delete_SupplyDocuments(
    d_DocumentID IN SupplyDocuments.DocumentID%TYPE
  );

  PROCEDURE get_SupplyDocuments_by_id(
    get_DocumentID IN SupplyDocuments.DocumentID%TYPE
  );

  PROCEDURE get_all_SupplyDocuments;

END SupplyDocuments_package;

/
--------------------------------------------------------
--  DDL for Package WAREHOUSES_PACKAGE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "WAREHOUSES_PACKAGE" IS
  PROCEDURE create_warehouses(
    c_WarehouseName IN warehouses.WarehouseName%TYPE,
    c_WarehouseDescription IN warehouses.WarehouseDescription%TYPE,
    c_CreatedBy IN warehouses.CreatedBy%TYPE,
    c_CreatedDate IN warehouses.CreatedDate%TYPE
  );

  PROCEDURE update_warehouses(
    u_WarehouseID IN warehouses.WarehouseID%TYPE,
    u_WarehouseName IN warehouses.WarehouseName%TYPE,
    u_WarehouseDescription IN warehouses.WarehouseDescription%TYPE,
    u_CreatedBy IN warehouses.CreatedBy%TYPE,
    u_CreatedDate IN warehouses.CreatedDate%TYPE
  );

  PROCEDURE delete_warehouses(
    d_WarehouseID IN warehouses.WarehouseID%TYPE
  );

  PROCEDURE get_warehouses_by_id(
    get_WarehouseID IN warehouses.WarehouseID%TYPE
  );

  PROCEDURE get_all_warehouses;

END warehouses_package;

/
--------------------------------------------------------
--  DDL for Package Body LOGIN_PACKAGE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "LOGIN_PACKAGE" 
as 
procedure Login (user_name in varchar2 , Pass in varchar2)
as 
cur sys_refcursor;
begin 
open cur for
select userid , usertype 
from users
where lower(users.username)=lower(user_name)and users.passwordhashed =Pass;
dbms_sql.return_result(cur);
end ;
end Login_Package;

/
--------------------------------------------------------
--  DDL for Package Body SUPPLYDOCUMENTS_PACKAGE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "SUPPLYDOCUMENTS_PACKAGE" IS
  PROCEDURE create_SupplyDocuments(
    c_DocumentName IN SupplyDocuments.DocumentName%TYPE,
    c_DocumentSubject IN SupplyDocuments.DocumentSubject%TYPE,
    c_WarehouseID IN SupplyDocuments.WarehouseID%TYPE,
    c_ItemID IN SupplyDocuments.ItemID%TYPE,
    c_CreatedBy IN SupplyDocuments.CreatedBy%TYPE,
    c_CreatedDate IN SupplyDocuments.CreatedDate%TYPE,
    c_Status IN SupplyDocuments.Status%TYPE
  ) IS
  BEGIN
    INSERT INTO SupplyDocuments (DocumentName, DocumentSubject, WarehouseID, ItemID, CreatedBy, CreatedDate, Status)
    VALUES (c_DocumentName, c_DocumentSubject, c_WarehouseID, c_ItemID, c_CreatedBy, c_CreatedDate, c_Status);
    COMMIT;
  END create_SupplyDocuments;

  PROCEDURE update_SupplyDocuments(
    u_DocumentID IN SupplyDocuments.DocumentID%TYPE,
    u_DocumentName IN SupplyDocuments.DocumentName%TYPE,
    u_DocumentSubject IN SupplyDocuments.DocumentSubject%TYPE,
    u_WarehouseID IN SupplyDocuments.WarehouseID%TYPE,
    u_ItemID IN SupplyDocuments.ItemID%TYPE,
    u_CreatedBy IN SupplyDocuments.CreatedBy%TYPE,
    u_CreatedDate IN SupplyDocuments.CreatedDate%TYPE,
    u_Status IN SupplyDocuments.Status%TYPE
  ) IS
  BEGIN
    UPDATE SupplyDocuments SET
      DocumentName = u_DocumentName,
      DocumentSubject = u_DocumentSubject,
      WarehouseID = u_WarehouseID,
      ItemID = u_ItemID,
      CreatedBy = u_CreatedBy,
      CreatedDate = u_CreatedDate,
      Status = u_Status
    WHERE DocumentID = u_DocumentID;
    COMMIT;
  END update_SupplyDocuments;

  PROCEDURE delete_SupplyDocuments(
    d_DocumentID IN SupplyDocuments.DocumentID%TYPE
  ) IS
  BEGIN
    DELETE FROM SupplyDocuments WHERE DocumentID = d_DocumentID;
    COMMIT;
  END delete_SupplyDocuments;

  PROCEDURE get_SupplyDocuments_by_id(
    get_DocumentID IN SupplyDocuments.DocumentID%TYPE
  ) IS
    c_get SYS_REFCURSOR;
  BEGIN
    OPEN c_get FOR SELECT * FROM SupplyDocuments WHERE DocumentID = get_DocumentID;
    DBMS_SQL.RETURN_RESULT(c_get);
  END get_SupplyDocuments_by_id;

  PROCEDURE get_all_SupplyDocuments IS
    c_g_all SYS_REFCURSOR;
  BEGIN
    OPEN c_g_all FOR SELECT * FROM SupplyDocuments;
    DBMS_SQL.RETURN_RESULT(c_g_all);
  END get_all_SupplyDocuments;

END SupplyDocuments_package;

/
--------------------------------------------------------
--  DDL for Package Body WAREHOUSES_PACKAGE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "WAREHOUSES_PACKAGE" IS
  PROCEDURE create_warehouses(
    c_WarehouseName IN warehouses.WarehouseName%TYPE,
    c_WarehouseDescription IN warehouses.WarehouseDescription%TYPE,
    c_CreatedBy IN warehouses.CreatedBy%TYPE,
    c_CreatedDate IN warehouses.CreatedDate%TYPE
  ) IS
  BEGIN
    INSERT INTO warehouses (WarehouseName, WarehouseDescription, CreatedBy, CreatedDate)
    VALUES (c_WarehouseName, c_WarehouseDescription, c_CreatedBy, c_CreatedDate);
    COMMIT;
  END create_warehouses;

  PROCEDURE update_warehouses(
    u_WarehouseID IN warehouses.WarehouseID%TYPE,
    u_WarehouseName IN warehouses.WarehouseName%TYPE,
    u_WarehouseDescription IN warehouses.WarehouseDescription%TYPE,
    u_CreatedBy IN warehouses.CreatedBy%TYPE,
    u_CreatedDate IN warehouses.CreatedDate%TYPE
  ) IS
  BEGIN
    UPDATE warehouses SET
      WarehouseName = u_WarehouseName,
      WarehouseDescription = u_WarehouseDescription,
      CreatedBy = u_CreatedBy,
      CreatedDate = u_CreatedDate
    WHERE WarehouseID = u_WarehouseID;
    COMMIT;
  END update_warehouses;

  PROCEDURE delete_warehouses(
    d_WarehouseID IN warehouses.WarehouseID%TYPE
  ) IS
  BEGIN
    DELETE FROM warehouses WHERE WarehouseID = d_WarehouseID;
    COMMIT;
  END delete_warehouses;

  PROCEDURE get_warehouses_by_id(
    get_WarehouseID IN warehouses.WarehouseID%TYPE
  ) IS
    c_get SYS_REFCURSOR;
  BEGIN
    OPEN c_get FOR SELECT * FROM warehouses WHERE WarehouseID = get_WarehouseID;
    DBMS_SQL.RETURN_RESULT(c_get);
  END get_warehouses_by_id;

  PROCEDURE get_all_warehouses IS
    c_g_all SYS_REFCURSOR;
  BEGIN
    OPEN c_g_all FOR SELECT * FROM warehouses;
    DBMS_SQL.RETURN_RESULT(c_g_all);
  END get_all_warehouses;

END warehouses_package;

/
--------------------------------------------------------
--  Constraints for Table ITEMS
--------------------------------------------------------

  ALTER TABLE "ITEMS" MODIFY ("ITEMID" NOT NULL ENABLE);
  ALTER TABLE "ITEMS" MODIFY ("WAREHOUSEID" NOT NULL ENABLE);
  ALTER TABLE "ITEMS" MODIFY ("ITEMNAME" NOT NULL ENABLE);
  ALTER TABLE "ITEMS" MODIFY ("QUANTITY" NOT NULL ENABLE);
  ALTER TABLE "ITEMS" ADD PRIMARY KEY ("ITEMID")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Constraints for Table USERS
--------------------------------------------------------

  ALTER TABLE "USERS" MODIFY ("USERID" NOT NULL ENABLE);
  ALTER TABLE "USERS" MODIFY ("FULLNAME" NOT NULL ENABLE);
  ALTER TABLE "USERS" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "USERS" MODIFY ("PASSWORDHASHED" NOT NULL ENABLE);
  ALTER TABLE "USERS" MODIFY ("USERTYPE" NOT NULL ENABLE);
  ALTER TABLE "USERS" ADD CHECK (UserType IN ('Manager', 'Employee')) ENABLE;
  ALTER TABLE "USERS" ADD PRIMARY KEY ("USERID")
  USING INDEX  ENABLE;
  ALTER TABLE "USERS" ADD UNIQUE ("USERNAME")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Constraints for Table SUPPLYDOCUMENTS
--------------------------------------------------------

  ALTER TABLE "SUPPLYDOCUMENTS" MODIFY ("DOCUMENTID" NOT NULL ENABLE);
  ALTER TABLE "SUPPLYDOCUMENTS" MODIFY ("DOCUMENTNAME" NOT NULL ENABLE);
  ALTER TABLE "SUPPLYDOCUMENTS" MODIFY ("WAREHOUSEID" NOT NULL ENABLE);
  ALTER TABLE "SUPPLYDOCUMENTS" MODIFY ("ITEMID" NOT NULL ENABLE);
  ALTER TABLE "SUPPLYDOCUMENTS" MODIFY ("CREATEDBY" NOT NULL ENABLE);
  ALTER TABLE "SUPPLYDOCUMENTS" ADD CHECK (Status IN ('Pending', 'Approved', 'Declined')) ENABLE;
  ALTER TABLE "SUPPLYDOCUMENTS" ADD PRIMARY KEY ("DOCUMENTID")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Constraints for Table WAREHOUSES
--------------------------------------------------------

  ALTER TABLE "WAREHOUSES" MODIFY ("WAREHOUSEID" NOT NULL ENABLE);
  ALTER TABLE "WAREHOUSES" MODIFY ("WAREHOUSENAME" NOT NULL ENABLE);
  ALTER TABLE "WAREHOUSES" MODIFY ("CREATEDBY" NOT NULL ENABLE);
  ALTER TABLE "WAREHOUSES" ADD PRIMARY KEY ("WAREHOUSEID")
  USING INDEX  ENABLE;
  ALTER TABLE "WAREHOUSES" ADD CONSTRAINT "WAREHOUSES_UK1" UNIQUE ("WAREHOUSENAME")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ITEMS
--------------------------------------------------------

  ALTER TABLE "ITEMS" ADD CONSTRAINT "FK_WAREHOUSE" FOREIGN KEY ("WAREHOUSEID")
	  REFERENCES "WAREHOUSES" ("WAREHOUSEID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SUPPLYDOCUMENTS
--------------------------------------------------------

  ALTER TABLE "SUPPLYDOCUMENTS" ADD CONSTRAINT "FK_WAREHOUSE_SD" FOREIGN KEY ("WAREHOUSEID")
	  REFERENCES "WAREHOUSES" ("WAREHOUSEID") ENABLE;
  ALTER TABLE "SUPPLYDOCUMENTS" ADD CONSTRAINT "FK_ITEM_SD" FOREIGN KEY ("ITEMID")
	  REFERENCES "ITEMS" ("ITEMID") ENABLE;
  ALTER TABLE "SUPPLYDOCUMENTS" ADD CONSTRAINT "FK_CREATEDBY_SD" FOREIGN KEY ("CREATEDBY")
	  REFERENCES "USERS" ("USERID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table WAREHOUSES
--------------------------------------------------------

  ALTER TABLE "WAREHOUSES" ADD CONSTRAINT "FK_CREATEDBY" FOREIGN KEY ("CREATEDBY")
	  REFERENCES "USERS" ("USERID") ENABLE;
